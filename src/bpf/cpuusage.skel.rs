// SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause)
//
// THIS FILE IS AUTOGENERATED BY CARGO-LIBBPF-GEN!

pub use self::imp::*;

#[allow(dead_code)]
#[allow(non_snake_case)]
#[allow(non_camel_case_types)]
#[allow(clippy::transmute_ptr_to_ref)]
#[allow(clippy::upper_case_acronyms)]
mod imp {
    use libbpf_rs::libbpf_sys;

    fn build_skel_config() -> libbpf_rs::Result<libbpf_rs::skeleton::ObjectSkeletonConfig<'static>>
    {
        let mut builder = libbpf_rs::skeleton::ObjectSkeletonConfigBuilder::new(DATA);
        builder
            .name("cpuusage_bpf")
            .map("pid_start", false)
            .map("idle_start", false)
            .map("cpu_info_map", false)
            .map("cpu_lastpid_map", false)
            .map("extime_map", false)
            .map("cpuusage.rodata", true)
            .prog("tracepoint_sched_switch");

        builder.build()
    }

    #[derive(Default)]
    pub struct CpuusageSkelBuilder {
        pub obj_builder: libbpf_rs::ObjectBuilder,
    }

    impl<'a> CpuusageSkelBuilder {
        pub fn open(mut self) -> libbpf_rs::Result<OpenCpuusageSkel<'a>> {
            let mut skel_config = build_skel_config()?;
            let open_opts = self.obj_builder.opts(std::ptr::null());

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_config.get(), &open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(skel_config.object_ptr())? };

            Ok(OpenCpuusageSkel { obj, skel_config })
        }

        pub fn open_opts(
            self,
            open_opts: libbpf_sys::bpf_object_open_opts,
        ) -> libbpf_rs::Result<OpenCpuusageSkel<'a>> {
            let mut skel_config = build_skel_config()?;

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_config.get(), &open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(skel_config.object_ptr())? };

            Ok(OpenCpuusageSkel { obj, skel_config })
        }
    }

    pub struct OpenCpuusageMaps<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl<'a> OpenCpuusageMaps<'a> {
        pub fn pid_start(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("pid_start").unwrap()
        }

        pub fn idle_start(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("idle_start").unwrap()
        }

        pub fn cpu_info_map(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("cpu_info_map").unwrap()
        }

        pub fn cpu_lastpid_map(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("cpu_lastpid_map").unwrap()
        }

        pub fn extime_map(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("extime_map").unwrap()
        }

        pub fn rodata(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("cpuusage.rodata").unwrap()
        }
    }

    pub struct OpenCpuusageMapsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl<'a> OpenCpuusageMapsMut<'a> {
        pub fn pid_start(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("pid_start").unwrap()
        }

        pub fn idle_start(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("idle_start").unwrap()
        }

        pub fn cpu_info_map(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("cpu_info_map").unwrap()
        }

        pub fn cpu_lastpid_map(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("cpu_lastpid_map").unwrap()
        }

        pub fn extime_map(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("extime_map").unwrap()
        }

        pub fn rodata(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("cpuusage.rodata").unwrap()
        }
    }

    pub struct OpenCpuusageProgs<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl<'a> OpenCpuusageProgs<'a> {
        pub fn tracepoint_sched_switch(&self) -> &libbpf_rs::OpenProgram {
            self.inner.prog("tracepoint_sched_switch").unwrap()
        }
    }

    pub struct OpenCpuusageProgsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl<'a> OpenCpuusageProgsMut<'a> {
        pub fn tracepoint_sched_switch(&mut self) -> &mut libbpf_rs::OpenProgram {
            self.inner.prog_mut("tracepoint_sched_switch").unwrap()
        }
    }

    pub mod cpuusage_rodata_types {
        #[derive(Debug, Copy, Clone)]
        #[repr(C)]
        pub struct rodata {
            pub i: i32,
        }
    }

    pub struct OpenCpuusageSkel<'a> {
        pub obj: libbpf_rs::OpenObject,
        skel_config: libbpf_rs::skeleton::ObjectSkeletonConfig<'a>,
    }

    impl<'a> OpenCpuusageSkel<'a> {
        pub fn load(mut self) -> libbpf_rs::Result<CpuusageSkel<'a>> {
            let ret = unsafe { libbpf_sys::bpf_object__load_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::Object::from_ptr(self.obj.take_ptr())? };

            Ok(CpuusageSkel {
                obj,
                skel_config: self.skel_config,
                links: CpuusageLinks::default(),
            })
        }

        pub fn progs(&self) -> OpenCpuusageProgs {
            OpenCpuusageProgs { inner: &self.obj }
        }

        pub fn progs_mut(&mut self) -> OpenCpuusageProgsMut {
            OpenCpuusageProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> OpenCpuusageMaps {
            OpenCpuusageMaps { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> OpenCpuusageMapsMut {
            OpenCpuusageMapsMut {
                inner: &mut self.obj,
            }
        }

        pub fn rodata(&mut self) -> &'a mut cpuusage_rodata_types::rodata {
            unsafe {
                std::mem::transmute::<*mut std::ffi::c_void, &'a mut cpuusage_rodata_types::rodata>(
                    self.skel_config.map_mmap_ptr(5).unwrap(),
                )
            }
        }
    }

    pub struct CpuusageMaps<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl<'a> CpuusageMaps<'a> {
        pub fn pid_start(&self) -> &libbpf_rs::Map {
            self.inner.map("pid_start").unwrap()
        }

        pub fn idle_start(&self) -> &libbpf_rs::Map {
            self.inner.map("idle_start").unwrap()
        }

        pub fn cpu_info_map(&self) -> &libbpf_rs::Map {
            self.inner.map("cpu_info_map").unwrap()
        }

        pub fn cpu_lastpid_map(&self) -> &libbpf_rs::Map {
            self.inner.map("cpu_lastpid_map").unwrap()
        }

        pub fn extime_map(&self) -> &libbpf_rs::Map {
            self.inner.map("extime_map").unwrap()
        }

        pub fn rodata(&self) -> &libbpf_rs::Map {
            self.inner.map("cpuusage.rodata").unwrap()
        }
    }

    pub struct CpuusageMapsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl<'a> CpuusageMapsMut<'a> {
        pub fn pid_start(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("pid_start").unwrap()
        }

        pub fn idle_start(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("idle_start").unwrap()
        }

        pub fn cpu_info_map(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("cpu_info_map").unwrap()
        }

        pub fn cpu_lastpid_map(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("cpu_lastpid_map").unwrap()
        }

        pub fn extime_map(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("extime_map").unwrap()
        }

        pub fn rodata(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("cpuusage.rodata").unwrap()
        }
    }

    pub struct CpuusageProgs<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl<'a> CpuusageProgs<'a> {
        pub fn tracepoint_sched_switch(&self) -> &libbpf_rs::Program {
            self.inner.prog("tracepoint_sched_switch").unwrap()
        }
    }

    pub struct CpuusageProgsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl<'a> CpuusageProgsMut<'a> {
        pub fn tracepoint_sched_switch(&mut self) -> &mut libbpf_rs::Program {
            self.inner.prog_mut("tracepoint_sched_switch").unwrap()
        }
    }

    #[derive(Default)]
    pub struct CpuusageLinks {
        pub tracepoint_sched_switch: Option<libbpf_rs::Link>,
    }

    pub struct CpuusageSkel<'a> {
        pub obj: libbpf_rs::Object,
        skel_config: libbpf_rs::skeleton::ObjectSkeletonConfig<'a>,
        pub links: CpuusageLinks,
    }

    unsafe impl<'a> Send for CpuusageSkel<'a> {}
    unsafe impl<'a> Sync for CpuusageSkel<'a> {}

    impl<'a> CpuusageSkel<'a> {
        pub fn progs(&self) -> CpuusageProgs {
            CpuusageProgs { inner: &self.obj }
        }

        pub fn progs_mut(&mut self) -> CpuusageProgsMut {
            CpuusageProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> CpuusageMaps {
            CpuusageMaps { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> CpuusageMapsMut {
            CpuusageMapsMut {
                inner: &mut self.obj,
            }
        }

        pub fn rodata(&mut self) -> &'a cpuusage_rodata_types::rodata {
            unsafe {
                std::mem::transmute::<*mut std::ffi::c_void, &'a cpuusage_rodata_types::rodata>(
                    self.skel_config.map_mmap_ptr(5).unwrap(),
                )
            }
        }

        pub fn attach(&mut self) -> libbpf_rs::Result<()> {
            let ret = unsafe { libbpf_sys::bpf_object__attach_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            self.links = CpuusageLinks {
                tracepoint_sched_switch: (|| {
                    Ok(core::ptr::NonNull::new(self.skel_config.prog_link_ptr(0)?)
                        .map(|ptr| unsafe { libbpf_rs::Link::from_ptr(ptr) }))
                })()?,
            };

            Ok(())
        }
    }

    const DATA: &[u8] = &[
        127, 69, 76, 70, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 247, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0,
        0, 64, 0, 10, 0, 1, 0, 0, 46, 115, 116, 114, 116, 97, 98, 0, 46, 115, 121, 109, 116, 97,
        98, 0, 116, 114, 97, 99, 101, 112, 111, 105, 110, 116, 47, 115, 99, 104, 101, 100, 47, 115,
        99, 104, 101, 100, 95, 115, 119, 105, 116, 99, 104, 0, 46, 114, 111, 100, 97, 116, 97, 0,
        46, 109, 97, 112, 115, 0, 108, 105, 99, 101, 110, 115, 101, 0, 99, 112, 117, 117, 115, 97,
        103, 101, 46, 98, 112, 102, 46, 99, 0, 76, 66, 66, 48, 95, 51, 0, 76, 66, 66, 48, 95, 53,
        0, 76, 66, 66, 48, 95, 54, 0, 76, 66, 66, 48, 95, 55, 0, 76, 66, 66, 48, 95, 57, 0, 76, 73,
        67, 69, 78, 83, 69, 0, 99, 112, 117, 95, 105, 110, 102, 111, 95, 109, 97, 112, 0, 99, 112,
        117, 95, 108, 97, 115, 116, 112, 105, 100, 95, 109, 97, 112, 0, 101, 120, 116, 105, 109,
        101, 95, 109, 97, 112, 0, 105, 0, 105, 100, 108, 101, 95, 115, 116, 97, 114, 116, 0, 112,
        105, 100, 95, 115, 116, 97, 114, 116, 0, 116, 114, 97, 99, 101, 112, 111, 105, 110, 116,
        95, 115, 99, 104, 101, 100, 95, 115, 119, 105, 116, 99, 104, 0, 46, 114, 101, 108, 116,
        114, 97, 99, 101, 112, 111, 105, 110, 116, 47, 115, 99, 104, 101, 100, 47, 115, 99, 104,
        101, 100, 95, 115, 119, 105, 116, 99, 104, 0, 46, 66, 84, 70, 0, 46, 66, 84, 70, 46, 101,
        120, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        69, 0, 0, 0, 4, 0, 241, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
        0, 0, 3, 0, 88, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 3, 0, 216,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 3, 0, 248, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 3, 0, 120, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 3, 0, 8, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 0, 0, 0, 17, 0,
        6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 17, 0, 5, 0, 64, 0, 0,
        0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 17, 0, 5, 0, 96, 0, 0, 0, 0, 0, 0, 0,
        32, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 17, 0, 5, 0, 128, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0,
        0, 0, 0, 0, 167, 0, 0, 0, 17, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 169,
        0, 0, 0, 17, 0, 5, 0, 32, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 180, 0, 0, 0, 17,
        0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 18, 0, 3, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 24, 3, 0, 0, 0, 0, 0, 0, 191, 23, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 5, 0,
        0, 0, 191, 6, 0, 0, 0, 0, 0, 0, 123, 106, 248, 255, 0, 0, 0, 0, 97, 113, 24, 0, 0, 0, 0, 0,
        99, 26, 240, 255, 0, 0, 0, 0, 97, 120, 56, 0, 0, 0, 0, 0, 99, 138, 232, 255, 0, 0, 0, 0,
        133, 0, 0, 0, 8, 0, 0, 0, 99, 10, 236, 255, 0, 0, 0, 0, 99, 10, 244, 255, 0, 0, 0, 0, 99,
        10, 196, 255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 240, 255, 255, 255, 24,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 1, 0, 0, 0, 21, 0, 61, 0, 0, 0,
        0, 0, 121, 9, 0, 0, 0, 0, 0, 0, 191, 167, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 240, 255, 255, 255,
        24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 114, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
        3, 0, 0, 0, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 114, 0, 0, 0, 0, 0, 0,
        133, 0, 0, 0, 1, 0, 0, 0, 183, 7, 0, 0, 0, 0, 0, 0, 21, 0, 12, 0, 0, 0, 0, 0, 123, 138,
        184, 255, 0, 0, 0, 0, 191, 152, 0, 0, 0, 0, 0, 0, 121, 9, 0, 0, 0, 0, 0, 0, 121, 167, 248,
        255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 240, 255, 255, 255, 24, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 3, 0, 0, 0, 31, 151, 0, 0, 0, 0, 0, 0,
        191, 137, 0, 0, 0, 0, 0, 0, 121, 168, 184, 255, 0, 0, 0, 0, 31, 150, 0, 0, 0, 0, 0, 0, 191,
        162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 196, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 133, 0, 0, 0, 1, 0, 0, 0, 21, 0, 9, 0, 0, 0, 0, 0, 121, 1, 24, 0, 0, 0, 0, 0,
        123, 26, 224, 255, 0, 0, 0, 0, 121, 1, 16, 0, 0, 0, 0, 0, 123, 26, 216, 255, 0, 0, 0, 0,
        121, 1, 8, 0, 0, 0, 0, 0, 123, 26, 208, 255, 0, 0, 0, 0, 121, 2, 0, 0, 0, 0, 0, 0, 123, 42,
        200, 255, 0, 0, 0, 0, 5, 0, 4, 0, 0, 0, 0, 0, 183, 1, 0, 0, 0, 0, 0, 0, 123, 26, 208, 255,
        0, 0, 0, 0, 123, 26, 200, 255, 0, 0, 0, 0, 183, 2, 0, 0, 0, 0, 0, 0, 121, 163, 248, 255, 0,
        0, 0, 0, 123, 58, 216, 255, 0, 0, 0, 0, 97, 163, 196, 255, 0, 0, 0, 0, 123, 58, 224, 255,
        0, 0, 0, 0, 15, 113, 0, 0, 0, 0, 0, 0, 123, 26, 208, 255, 0, 0, 0, 0, 15, 38, 0, 0, 0, 0,
        0, 0, 123, 106, 200, 255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 196, 255,
        255, 255, 191, 163, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 200, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 4, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 2, 0, 0, 0, 191, 162, 0,
        0, 0, 0, 0, 0, 7, 2, 0, 0, 232, 255, 255, 255, 191, 163, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 248,
        255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 4, 0, 0, 0, 0, 0, 0,
        133, 0, 0, 0, 2, 0, 0, 0, 191, 129, 0, 0, 0, 0, 0, 0, 85, 1, 8, 0, 0, 0, 0, 0, 191, 162, 0,
        0, 0, 0, 0, 0, 7, 2, 0, 0, 232, 255, 255, 255, 191, 163, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 248,
        255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 4, 0, 0, 0, 0, 0, 0,
        133, 0, 0, 0, 2, 0, 0, 0, 183, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 117, 97, 108, 32, 66, 83, 68, 47, 71, 80, 76,
        0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0, 0, 14, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 13, 0, 0, 0, 40, 1, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 0, 13, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 88, 2, 0,
        0, 0, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 152, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0,
        232, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 13, 0, 0, 0, 159, 235, 1, 0, 24, 0, 0, 0, 0, 0, 0, 0,
        56, 4, 0, 0, 56, 4, 0, 0, 219, 5, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 32, 0, 0, 0, 1, 0, 0, 0, 2,
        0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 64, 0, 0, 0, 18, 0, 0, 0, 8, 0, 0, 0, 128, 0,
        0, 0, 22, 0, 0, 0, 14, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 0, 0, 0, 28, 0, 0,
        0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 5,
        0, 0, 0, 1, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 0, 4, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 2, 9, 0, 0, 0, 52, 0, 0, 0, 2, 0, 0, 4, 8, 0, 0, 0, 58, 0, 0, 0, 10, 0,
        0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 10, 0, 0, 0, 32, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 8, 11, 0, 0,
        0, 75, 0, 0, 0, 0, 0, 0, 8, 12, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 8, 13, 0, 0, 0, 85, 0, 0, 0,
        0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 15, 0, 0, 0, 98, 0, 0, 0, 0,
        0, 0, 8, 16, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 1, 8, 0, 0, 0, 64, 0, 0, 0, 127, 0, 0, 0, 0,
        0, 0, 14, 1, 0, 0, 0, 1, 0, 0, 0, 137, 0, 0, 0, 0, 0, 0, 14, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 4, 0, 0, 4, 32, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0,
        64, 0, 0, 0, 18, 0, 0, 0, 20, 0, 0, 0, 128, 0, 0, 0, 22, 0, 0, 0, 21, 0, 0, 0, 192, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 2, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 22, 0, 0, 0, 148, 0, 0, 0,
        4, 0, 0, 4, 32, 0, 0, 0, 154, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 23, 0, 0, 0,
        64, 0, 0, 0, 165, 0, 0, 0, 23, 0, 0, 0, 128, 0, 0, 0, 62, 0, 0, 0, 23, 0, 0, 0, 192, 0, 0,
        0, 175, 0, 0, 0, 0, 0, 0, 8, 24, 0, 0, 0, 184, 0, 0, 0, 0, 0, 0, 8, 15, 0, 0, 0, 188, 0, 0,
        0, 0, 0, 0, 14, 19, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 32, 0, 0, 0, 1, 0, 0, 0,
        2, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 64, 0, 0, 0, 18, 0, 0, 0, 20, 0, 0, 0, 128,
        0, 0, 0, 22, 0, 0, 0, 20, 0, 0, 0, 192, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 14, 26, 0, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 32, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0,
        0, 6, 0, 0, 0, 64, 0, 0, 0, 18, 0, 0, 0, 20, 0, 0, 0, 128, 0, 0, 0, 22, 0, 0, 0, 14, 0, 0,
        0, 192, 0, 0, 0, 217, 0, 0, 0, 0, 0, 0, 14, 28, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        2, 31, 0, 0, 0, 228, 0, 0, 0, 8, 0, 0, 4, 64, 0, 0, 0, 240, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0,
        0, 247, 0, 0, 0, 33, 0, 0, 0, 64, 0, 0, 0, 1, 1, 0, 0, 3, 0, 0, 0, 192, 0, 0, 0, 10, 1, 0,
        0, 3, 0, 0, 0, 224, 0, 0, 0, 20, 1, 0, 0, 34, 0, 0, 0, 0, 1, 0, 0, 31, 1, 0, 0, 33, 0, 0,
        0, 64, 1, 0, 0, 41, 1, 0, 0, 3, 0, 0, 0, 192, 1, 0, 0, 50, 1, 0, 0, 3, 0, 0, 0, 224, 1, 0,
        0, 60, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 32,
        0, 0, 0, 5, 0, 0, 0, 16, 0, 0, 0, 65, 1, 0, 0, 0, 0, 0, 1, 8, 0, 0, 0, 64, 0, 0, 1, 0, 0,
        0, 0, 1, 0, 0, 13, 3, 0, 0, 0, 79, 1, 0, 0, 30, 0, 0, 0, 84, 1, 0, 0, 1, 0, 0, 12, 35, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 3, 0, 0, 0, 108, 1, 0,
        0, 0, 0, 0, 14, 37, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 32, 0, 0, 0,
        5, 0, 0, 0, 13, 0, 0, 0, 110, 1, 0, 0, 0, 0, 0, 14, 40, 0, 0, 0, 1, 0, 0, 0, 167, 5, 0, 0,
        1, 0, 0, 15, 4, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 175, 5, 0, 0, 5, 0, 0, 15,
        160, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 18, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0,
        25, 0, 0, 0, 64, 0, 0, 0, 32, 0, 0, 0, 27, 0, 0, 0, 96, 0, 0, 0, 32, 0, 0, 0, 29, 0, 0, 0,
        128, 0, 0, 0, 32, 0, 0, 0, 181, 5, 0, 0, 1, 0, 0, 15, 13, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0,
        13, 0, 0, 0, 0, 116, 121, 112, 101, 0, 109, 97, 120, 95, 101, 110, 116, 114, 105, 101, 115,
        0, 107, 101, 121, 0, 118, 97, 108, 117, 101, 0, 105, 110, 116, 0, 95, 95, 65, 82, 82, 65,
        89, 95, 83, 73, 90, 69, 95, 84, 89, 80, 69, 95, 95, 0, 107, 101, 121, 95, 107, 0, 112, 105,
        100, 0, 99, 112, 117, 0, 117, 105, 110, 116, 51, 50, 95, 116, 0, 117, 51, 50, 0, 95, 95,
        117, 51, 50, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0, 95, 95, 117,
        54, 52, 0, 108, 111, 110, 103, 32, 108, 111, 110, 103, 32, 117, 110, 115, 105, 103, 110,
        101, 100, 32, 105, 110, 116, 0, 112, 105, 100, 95, 115, 116, 97, 114, 116, 0, 105, 100,
        108, 101, 95, 115, 116, 97, 114, 116, 0, 118, 97, 108, 95, 107, 0, 116, 111, 116, 97, 108,
        0, 105, 100, 108, 101, 0, 108, 97, 115, 116, 95, 116, 105, 109, 101, 0, 117, 105, 110, 116,
        54, 52, 95, 116, 0, 117, 54, 52, 0, 99, 112, 117, 95, 105, 110, 102, 111, 95, 109, 97, 112,
        0, 99, 112, 117, 95, 108, 97, 115, 116, 112, 105, 100, 95, 109, 97, 112, 0, 101, 120, 116,
        105, 109, 101, 95, 109, 97, 112, 0, 115, 119, 105, 116, 99, 104, 95, 97, 114, 103, 115, 0,
        105, 103, 110, 111, 114, 101, 0, 112, 114, 101, 118, 95, 99, 111, 109, 109, 0, 112, 114,
        101, 118, 95, 112, 105, 100, 0, 112, 114, 101, 118, 95, 112, 114, 105, 111, 0, 112, 114,
        101, 118, 95, 115, 116, 97, 116, 101, 0, 110, 101, 120, 116, 95, 99, 111, 109, 109, 0, 110,
        101, 120, 116, 95, 112, 105, 100, 0, 110, 101, 120, 116, 95, 112, 114, 105, 111, 0, 99,
        104, 97, 114, 0, 108, 111, 110, 103, 32, 108, 111, 110, 103, 32, 105, 110, 116, 0, 97, 114,
        103, 115, 0, 116, 114, 97, 99, 101, 112, 111, 105, 110, 116, 95, 115, 99, 104, 101, 100,
        95, 115, 119, 105, 116, 99, 104, 0, 105, 0, 76, 73, 67, 69, 78, 83, 69, 0, 47, 104, 111,
        109, 101, 47, 99, 111, 100, 101, 110, 111, 118, 105, 99, 47, 101, 66, 80, 70, 47, 114, 101,
        108, 111, 112, 50, 47, 115, 114, 99, 47, 98, 112, 102, 47, 99, 112, 117, 117, 115, 97, 103,
        101, 46, 98, 112, 102, 46, 99, 0, 105, 110, 116, 32, 116, 114, 97, 99, 101, 112, 111, 105,
        110, 116, 95, 115, 99, 104, 101, 100, 95, 115, 119, 105, 116, 99, 104, 40, 115, 116, 114,
        117, 99, 116, 32, 115, 119, 105, 116, 99, 104, 95, 97, 114, 103, 115, 32, 42, 97, 114, 103,
        115, 41, 0, 32, 32, 32, 32, 117, 105, 110, 116, 54, 52, 95, 116, 32, 116, 115, 32, 61, 32,
        98, 112, 102, 95, 107, 116, 105, 109, 101, 95, 103, 101, 116, 95, 110, 115, 40, 41, 59, 0,
        32, 32, 32, 32, 112, 114, 101, 118, 95, 112, 105, 100, 32, 61, 32, 107, 101, 121, 95, 112,
        114, 101, 118, 46, 112, 105, 100, 32, 61, 32, 97, 114, 103, 115, 45, 62, 112, 114, 101,
        118, 95, 112, 105, 100, 59, 0, 32, 32, 32, 32, 110, 101, 120, 116, 95, 112, 105, 100, 32,
        61, 32, 107, 101, 121, 95, 110, 101, 120, 116, 46, 112, 105, 100, 32, 61, 32, 97, 114, 103,
        115, 45, 62, 110, 101, 120, 116, 95, 112, 105, 100, 59, 59, 0, 32, 32, 32, 32, 99, 112,
        117, 32, 61, 32, 107, 101, 121, 95, 112, 114, 101, 118, 46, 99, 112, 117, 32, 61, 32, 107,
        101, 121, 95, 110, 101, 120, 116, 46, 99, 112, 117, 32, 61, 32, 98, 112, 102, 95, 103, 101,
        116, 95, 115, 109, 112, 95, 112, 114, 111, 99, 101, 115, 115, 111, 114, 95, 105, 100, 40,
        41, 59, 0, 32, 32, 32, 32, 116, 115, 112, 95, 112, 32, 61, 32, 98, 112, 102, 95, 109, 97,
        112, 95, 108, 111, 111, 107, 117, 112, 95, 101, 108, 101, 109, 40, 38, 112, 105, 100, 95,
        115, 116, 97, 114, 116, 44, 38, 107, 101, 121, 95, 112, 114, 101, 118, 41, 59, 0, 32, 32,
        32, 32, 105, 102, 40, 116, 115, 112, 95, 112, 41, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32,
        100, 101, 108, 116, 97, 95, 116, 111, 116, 97, 108, 32, 61, 32, 116, 115, 32, 45, 32, 40,
        42, 116, 115, 112, 95, 112, 41, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 98, 112, 102, 95,
        109, 97, 112, 95, 100, 101, 108, 101, 116, 101, 95, 101, 108, 101, 109, 40, 38, 112, 105,
        100, 95, 115, 116, 97, 114, 116, 44, 38, 107, 101, 121, 95, 112, 114, 101, 118, 41, 59, 0,
        32, 32, 32, 32, 32, 32, 32, 32, 116, 115, 112, 95, 105, 32, 61, 32, 98, 112, 102, 95, 109,
        97, 112, 95, 108, 111, 111, 107, 117, 112, 95, 101, 108, 101, 109, 40, 38, 105, 100, 108,
        101, 95, 115, 116, 97, 114, 116, 44, 38, 107, 101, 121, 95, 112, 114, 101, 118, 41, 59, 0,
        32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 116, 115, 112, 95, 105, 41, 32, 123, 0,
        9, 9, 9, 100, 101, 108, 116, 97, 95, 105, 100, 108, 101, 32, 61, 32, 116, 115, 32, 45, 32,
        40, 42, 116, 115, 112, 95, 105, 41, 59, 0, 9, 9, 9, 98, 112, 102, 95, 109, 97, 112, 95,
        100, 101, 108, 101, 116, 101, 95, 101, 108, 101, 109, 40, 38, 105, 100, 108, 101, 95, 115,
        116, 97, 114, 116, 44, 38, 107, 101, 121, 95, 112, 114, 101, 118, 41, 59, 0, 32, 32, 32,
        32, 32, 32, 32, 32, 118, 97, 108, 32, 61, 32, 98, 112, 102, 95, 109, 97, 112, 95, 108, 111,
        111, 107, 117, 112, 95, 101, 108, 101, 109, 40, 38, 99, 112, 117, 95, 105, 110, 102, 111,
        95, 109, 97, 112, 44, 38, 99, 112, 117, 41, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 105,
        102, 40, 118, 97, 108, 41, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97,
        108, 117, 101, 32, 61, 32, 40, 42, 118, 97, 108, 41, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32,
        32, 32, 32, 32, 118, 97, 108, 117, 101, 46, 105, 100, 108, 101, 32, 61, 32, 48, 59, 0, 32,
        32, 32, 32, 32, 32, 32, 32, 118, 97, 108, 117, 101, 46, 116, 111, 116, 97, 108, 32, 43, 61,
        32, 100, 101, 108, 116, 97, 95, 116, 111, 116, 97, 108, 59, 0, 9, 9, 118, 97, 108, 117,
        101, 46, 108, 97, 115, 116, 95, 116, 105, 109, 101, 32, 61, 32, 116, 115, 59, 0, 9, 9, 118,
        97, 108, 117, 101, 46, 99, 112, 117, 32, 61, 32, 99, 112, 117, 59, 0, 9, 9, 118, 97, 108,
        117, 101, 46, 105, 100, 108, 101, 32, 43, 61, 32, 100, 101, 108, 116, 97, 95, 105, 100,
        108, 101, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 98, 112, 102, 95, 109, 97, 112, 95, 117,
        112, 100, 97, 116, 101, 95, 101, 108, 101, 109, 40, 38, 99, 112, 117, 95, 105, 110, 102,
        111, 95, 109, 97, 112, 44, 38, 99, 112, 117, 44, 38, 118, 97, 108, 117, 101, 44, 66, 80,
        70, 95, 65, 78, 89, 41, 59, 0, 32, 32, 32, 32, 98, 112, 102, 95, 109, 97, 112, 95, 117,
        112, 100, 97, 116, 101, 95, 101, 108, 101, 109, 40, 38, 112, 105, 100, 95, 115, 116, 97,
        114, 116, 44, 38, 107, 101, 121, 95, 110, 101, 120, 116, 44, 38, 116, 115, 44, 66, 80, 70,
        95, 65, 78, 89, 41, 59, 0, 32, 32, 32, 32, 105, 102, 32, 40, 110, 101, 120, 116, 95, 112,
        105, 100, 32, 61, 61, 32, 48, 41, 32, 123, 0, 9, 9, 98, 112, 102, 95, 109, 97, 112, 95,
        117, 112, 100, 97, 116, 101, 95, 101, 108, 101, 109, 40, 38, 105, 100, 108, 101, 95, 115,
        116, 97, 114, 116, 44, 38, 107, 101, 121, 95, 110, 101, 120, 116, 44, 38, 116, 115, 44, 66,
        80, 70, 95, 65, 78, 89, 41, 59, 0, 9, 114, 101, 116, 117, 114, 110, 32, 48, 59, 0, 46, 114,
        111, 100, 97, 116, 97, 0, 46, 109, 97, 112, 115, 0, 108, 105, 99, 101, 110, 115, 101, 0,
        116, 114, 97, 99, 101, 112, 111, 105, 110, 116, 47, 115, 99, 104, 101, 100, 47, 115, 99,
        104, 101, 100, 95, 115, 119, 105, 116, 99, 104, 0, 0, 0, 0, 0, 0, 159, 235, 1, 0, 32, 0, 0,
        0, 0, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 220, 2, 0, 0, 240, 2, 0, 0, 0, 0, 0, 0, 8, 0, 0,
        0, 189, 5, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 16, 0, 0, 0, 189, 5, 0, 0, 45, 0, 0,
        0, 0, 0, 0, 0, 118, 1, 0, 0, 169, 1, 0, 0, 0, 248, 0, 0, 8, 0, 0, 0, 118, 1, 0, 0, 223, 1,
        0, 0, 19, 8, 1, 0, 24, 0, 0, 0, 118, 1, 0, 0, 223, 1, 0, 0, 14, 8, 1, 0, 32, 0, 0, 0, 118,
        1, 0, 0, 5, 2, 0, 0, 37, 36, 1, 0, 40, 0, 0, 0, 118, 1, 0, 0, 5, 2, 0, 0, 29, 36, 1, 0, 48,
        0, 0, 0, 118, 1, 0, 0, 51, 2, 0, 0, 37, 40, 1, 0, 56, 0, 0, 0, 118, 1, 0, 0, 51, 2, 0, 0,
        29, 40, 1, 0, 64, 0, 0, 0, 118, 1, 0, 0, 98, 2, 0, 0, 41, 44, 1, 0, 72, 0, 0, 0, 118, 1, 0,
        0, 98, 2, 0, 0, 39, 44, 1, 0, 80, 0, 0, 0, 118, 1, 0, 0, 98, 2, 0, 0, 24, 44, 1, 0, 88, 0,
        0, 0, 118, 1, 0, 0, 98, 2, 0, 0, 9, 44, 1, 0, 104, 0, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 112, 0, 0, 0, 118, 1, 0, 0, 166, 2, 0, 0, 13, 52, 1, 0, 136, 0, 0, 0, 118, 1, 0, 0,
        221, 2, 0, 0, 8, 56, 1, 0, 144, 0, 0, 0, 118, 1, 0, 0, 236, 2, 0, 0, 29, 64, 1, 0, 160, 0,
        0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 118, 1, 0, 0, 17, 3, 0, 0, 9, 76,
        1, 0, 200, 0, 0, 0, 118, 1, 0, 0, 68, 3, 0, 0, 17, 84, 1, 0, 240, 0, 0, 0, 118, 1, 0, 0,
        128, 3, 0, 0, 13, 88, 1, 0, 8, 1, 0, 0, 118, 1, 0, 0, 149, 3, 0, 0, 23, 92, 1, 0, 16, 1, 0,
        0, 118, 1, 0, 0, 149, 3, 0, 0, 17, 92, 1, 0, 32, 1, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 40, 1, 0, 0, 118, 1, 0, 0, 180, 3, 0, 0, 4, 96, 1, 0, 64, 1, 0, 0, 118, 1, 0, 0, 149,
        3, 0, 0, 20, 92, 1, 0, 88, 1, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0,
        118, 1, 0, 0, 227, 3, 0, 0, 15, 104, 1, 0, 136, 1, 0, 0, 118, 1, 0, 0, 26, 4, 0, 0, 12,
        108, 1, 0, 144, 1, 0, 0, 118, 1, 0, 0, 43, 4, 0, 0, 22, 112, 1, 0, 224, 1, 0, 0, 118, 1, 0,
        0, 71, 4, 0, 0, 24, 124, 1, 0, 240, 1, 0, 0, 118, 1, 0, 0, 99, 4, 0, 0, 21, 132, 1, 0, 248,
        1, 0, 0, 118, 1, 0, 0, 135, 4, 0, 0, 21, 140, 1, 0, 0, 2, 0, 0, 118, 1, 0, 0, 135, 4, 0, 0,
        19, 140, 1, 0, 8, 2, 0, 0, 118, 1, 0, 0, 159, 4, 0, 0, 15, 144, 1, 0, 16, 2, 0, 0, 118, 1,
        0, 0, 159, 4, 0, 0, 13, 144, 1, 0, 24, 2, 0, 0, 118, 1, 0, 0, 178, 4, 0, 0, 14, 136, 1, 0,
        40, 2, 0, 0, 118, 1, 0, 0, 99, 4, 0, 0, 21, 132, 1, 0, 64, 2, 0, 0, 118, 1, 0, 0, 135, 4,
        0, 0, 21, 140, 1, 0, 88, 2, 0, 0, 118, 1, 0, 0, 206, 4, 0, 0, 9, 148, 1, 0, 128, 2, 0, 0,
        118, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 2, 0, 0, 118, 1, 0, 0, 14, 5, 0, 0, 5, 156, 1,
        0, 184, 2, 0, 0, 118, 1, 0, 0, 73, 5, 0, 0, 18, 160, 1, 0, 192, 2, 0, 0, 118, 1, 0, 0, 73,
        5, 0, 0, 9, 160, 1, 0, 208, 2, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 2, 0, 0,
        118, 1, 0, 0, 98, 5, 0, 0, 3, 164, 1, 0, 8, 3, 0, 0, 118, 1, 0, 0, 156, 5, 0, 0, 2, 184, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64,
        0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 72, 1, 0, 0, 0, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 8, 0,
        0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 200, 2, 0, 0, 0, 0, 0, 0, 24, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 5, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 1, 0, 0,
        0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 5, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 61, 0,
        0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 6, 0, 0, 0, 0, 0, 0,
        13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 214, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 6, 0,
        0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0,
        16, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 24, 7, 0, 0, 0, 0, 0, 0, 43, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 72, 17, 0, 0, 0, 0, 0, 0, 16, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];
}
